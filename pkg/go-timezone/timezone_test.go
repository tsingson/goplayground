package timezone

import (
	"testing"
	"time"
)

var timezoneShorts = []string{
	"ACST",
	"ADT",
	"AEST",
	"AKDT",
	"AST",
	"AWST",
	"BST",
	"CDT",
	"CEST",
	"CST",
	"ChST",
	"EDT",
	"EEST",
	"EET",
	"EST",
	"GMT",
	"GMT+1",
	"GMT+10",
	"GMT+12",
	"GMT+2",
	"GMT+3",
	"GMT+4",
	"GMT+4:30",
	"GMT+5",
	"GMT+5:30",
	"GMT+6",
	"GMT+6:30",
	"GMT+7",
	"GMT+8",
	"GMT+9",
	"GMT+9:30",
	"GMT-3",
	"GMT-4",
	"GMT-5",
	"GMT-6",
	"GMT-7",
	"HKT",
	"HST",
	"IST",
	"JST",
	"MDT",
	"MST",
	"MYT",
	"NDT",
	"NZST",
	"PDT",
	"SGT",
	"UTCâˆ’4",
	"WAT",
	"WEST",
	"GMT+12",
	"GMT+11",
	"NUT",
	"SST",
	"CKT",
	"GMT+10",
	"HST",
	"TAHT",
	"MART",
	"AKST",
	"GAMT",
	"GMT+9",
	"GMT+8",
	"PST",
	"GMT+7",
	"MST",
	"CST",
	"GALT",
	"GMT+6",
	"ACT",
	"COT",
	"EAST",
	"ECT",
	"EST",
	"GMT+5",
	"PET",
	"VET",
	"AMT",
	"AST",
	"BOT",
	"GMT+4",
	"GYT",
	"NST",
	"ART",
	"BRT",
	"CLT",
	"FKST",
	"GFT",
	"GMT+3",
	"PMST",
	"PYST",
	"ROTT",
	"SRT",
	"WGT",
	"FNT",
	"GMT+2",
	"UYST",
	"AZOT",
	"CVT",
	"EGT",
	"GMT+1",
	"GMT",
	"UCT",
	"UTC",
	"WET",
	"CET",
	"GMT-1",
	"MET",
	"WAT",
	"CAT",
	"EET",
	"GMT-2",
	"SAST",
	"WAST",
	"EAT",
	"GMT-3",
	"MSK",
	"SYOT",
	"IRST",
	"AZT",
	"GET",
	"GMT-4",
	"GST",
	"MUT",
	"RET",
	"SAMT",
	"SCT",
	"AFT",
	"AQTT",
	"GMT-5",
	"MAWT",
	"MVT",
	"ORAT",
	"PKT",
	"TFT",
	"TJT",
	"TMT",
	"UZT",
	"YEKT",
	"IST",
	"NPT",
	"ALMT",
	"BDT",
	"BTT",
	"GMT-6",
	"IOT",
	"KGT",
	"NOVT",
	"OMST",
	"QYZT",
	"VOST",
	"XJT",
	"CCT",
	"MMT",
	"CXT",
	"DAVT",
	"GMT-7",
	"HOVT",
	"ICT",
	"KRAT",
	"WIB",
	"AWST",
	"BNT",
	"CHOT",
	"GMT-8",
	"HKT",
	"IRKT",
	"MYT",
	"PHT",
	"SGT",
	"ULAT",
	"WITA",
	"ACWST",
	"GMT-9",
	"JST",
	"KST",
	"PWT",
	"TLT",
	"WIT",
	"YAKT",
	"ACST",
	"AEST",
	"CHUT",
	"ChST",
	"DDUT",
	"GMT-10",
	"MAGT",
	"PGT",
	"SAKT",
	"VLAT",
	"ACDT",
	"AEDT",
	"BST",
	"GMT-11",
	"KOST",
	"LHDT",
	"MIST",
	"NCT",
	"PONT",
	"SBT",
	"SRET",
	"VUT",
	"NFT",
	"ANAT",
	"FJT",
	"GILT",
	"GMT-12",
	"MHT",
	"NRT",
	"PETT",
	"TVT",
	"WAKT",
	"WFT",
	"GMT-13",
	"NZDT",
	"PHOT",
	"TKT",
	"TOT",
	"CHADT",
	"GMT-14",
	"LINT",
	"WSDT",
}

func TestAbbreviations(t *testing.T) {
	for _, abbr := range timezoneShorts {
		foundTimezones, err := GetTimezones(abbr)
		if err != nil {
			t.Errorf("Error loading short timezone %s: %v", abbr, err)
			continue
		}

		if len(foundTimezones) == 0 {
			t.Errorf("Empty timezones list in %s", abbr)
			continue
		}

		for _, tz := range foundTimezones {
			loc, err := time.LoadLocation(tz)
			if err != nil {
				t.Errorf("Error loading location: %s -> %s", abbr, tz)
			}
			if loc == nil {
				t.Errorf("Nil location for %s -> %s", abbr, tz)
			}
		}
	}
}
